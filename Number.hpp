#ifndef __NUMBER_HPP__
#define __NUMBER_HPP__

#include "arm7type.hpp"
#include "Graphic.hpp"
#include "Draw.hpp"


struct Number
{
	static constexpr const u8arm_t SIZE=7;
	static constexpr const u8arm_t NUM=16;

	static const u8arm_t NUMBER[NUM][SIZE][SIZE];

	static inline void draw(Graphic &g,const Point &point,const Color &color,const u8arm_t num)
	{
		Draw::draw(g,point,color,NUMBER,num);
	}
};

const u8arm_t Number::NUMBER[Number::NUM][Number::SIZE][Number::SIZE]
{

		{ // 0
		{0,1,1,1,1,1,0} , \
		{0,1,0,0,0,1,0} , \
		{0,1,0,0,0,1,0} , \
		{0,1,0,0,0,1,0} , \
		{0,1,0,0,0,1,0} , \
		{0,1,0,0,0,1,0} , \
		{0,1,1,1,1,1,0} ,
		}, \

		{ // 1
		{0,0,1,1,0,0,0} , \
		{0,1,0,1,0,0,0} , \
		{0,0,0,1,0,0,0} , \
		{0,0,0,1,0,0,0} , \
		{0,0,0,1,0,0,0} , \
		{0,0,0,1,0,0,0} , \
		{0,1,1,1,1,1,0} ,
		} , \

		{ // 2
		{0,1,1,1,1,1,0} , \
		{0,0,0,0,0,1,0} , \
		{0,0,0,0,0,1,0} , \
		{0,1,1,1,1,1,0} , \
		{0,1,0,0,0,0,0} , \
		{0,1,0,0,0,0,0} , \
		{0,1,1,1,1,1,0} ,
		}, \


		{ // 3
		{0,1,1,1,1,1,0} , \
		{0,1,0,0,0,1,0} , \
		{0,0,0,0,0,1,0} , \
		{0,0,1,1,1,1,0} , \
		{0,0,0,0,0,1,0} , \
		{0,1,0,0,0,1,0} , \
		{0,1,1,1,1,1,0} ,
		}, \

		{ // 4
		{0,1,0,0,1,0,0} , \
		{0,1,0,0,1,0,0} , \
		{0,1,0,0,1,0,0} , \
		{0,1,1,1,1,1,0} , \
		{0,0,0,0,1,0,0} , \
		{0,0,0,0,1,0,0} , \
		{0,0,0,1,1,1,0} ,
		} , \

		{ // 5
		{0,1,1,1,1,1,0} , \
		{0,1,0,0,0,0,0} , \
		{0,1,0,0,0,0,0} , \
		{0,1,1,1,1,1,0} , \
		{0,0,0,0,0,1,0} , \
		{0,0,0,0,0,1,0} , \
		{0,1,1,1,1,1,0} ,
		}, \

		{ // 6
		{0,1,1,1,1,1,0} , \
		{0,1,0,0,0,0,0} , \
		{0,1,0,0,0,0,0} , \
		{0,1,1,1,1,1,0} , \
		{0,1,0,0,0,1,0} , \
		{0,1,0,0,0,1,0} , \
		{0,1,1,1,1,1,0} ,
		}, \

		{ // 7
		{0,1,1,1,1,1,0} , \
		{0,1,0,0,0,1,0} , \
		{0,0,0,0,0,1,0} , \
		{0,0,0,0,1,0,0} , \
		{0,0,0,0,1,0,0} , \
		{0,0,0,0,1,0,0} , \
		{0,0,0,1,1,1,0} ,
		}, \

		{ // 8
		{0,1,1,1,1,1,0} , \
		{0,1,0,0,0,1,0} , \
		{0,1,0,0,0,1,0} , \
		{0,1,1,1,1,1,0} , \
		{0,1,0,0,0,1,0} , \
		{0,1,0,0,0,1,0} , \
		{0,1,1,1,1,1,0} ,
		}, \

		{ // 9
		{0,1,1,1,1,1,0} , \
		{0,1,0,0,0,1,0} , \
		{0,1,0,0,0,1,0} , \
		{0,1,1,1,1,1,0} , \
		{0,0,0,0,0,1,0} , \
		{0,0,0,0,0,1,0} , \
		{0,1,1,1,1,1,0} ,
		}, \

		{ // A
		{0,1,1,1,1,1,0} , \
		{0,1,0,0,0,1,0} , \
		{0,1,0,0,0,1,0} , \
		{0,1,0,0,0,1,0} , \
		{0,1,1,1,1,1,0} , \
		{0,1,0,0,0,1,0} , \
		{0,1,0,0,0,1,0} ,
		}, \

		{ // B
		{0,1,1,1,1,0,0} , \
		{0,1,0,0,0,1,0} , \
		{0,1,0,0,0,1,0} , \
		{0,1,1,1,1,1,0} , \
		{0,1,0,0,0,1,0} , \
		{0,1,0,0,0,1,0} , \
		{0,1,1,1,1,0,0} ,
		}, \

		{ // C
		{0,1,1,1,1,1,0} , \
		{0,1,0,0,0,0,0} , \
		{0,1,0,0,0,0,0} , \
		{0,1,0,0,0,0,0} , \
		{0,1,0,0,0,0,0} , \
		{0,1,0,0,0,0,0} , \
		{0,1,1,1,1,1,0} ,
		}, \

		{ // D
		{0,1,1,1,1,0,0} , \
		{0,1,0,0,0,1,0} , \
		{0,1,0,0,0,1,0} , \
		{0,1,0,0,0,1,0} , \
		{0,1,0,0,0,1,0} , \
		{0,1,0,0,0,1,0} , \
		{0,1,1,1,1,0,0} ,
		}, \

		{ // E
		{0,1,1,1,1,1,0} , \
		{0,1,0,0,0,0,0} , \
		{0,1,0,0,0,0,0} , \
		{0,1,1,1,1,1,0} , \
		{0,1,0,0,0,0,0} , \
		{0,1,0,0,0,0,0} , \
		{0,1,1,1,1,1,0} ,
		}, \

		{ // F
		{0,1,1,1,1,1,0} , \
		{0,1,0,0,0,0,0} , \
		{0,1,1,1,1,0,0} , \
		{0,1,0,0,0,0,0} , \
		{0,1,0,0,0,0,0} , \
		{0,1,0,0,0,0,0} , \
		{0,1,0,0,0,0,0} ,
		}


};

#endif

